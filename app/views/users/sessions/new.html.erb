
<div class="container Login">
    <div class="row Center">
        <div class="col s10 m5">
            <h2 class="header">Entre</h2>
            <div class="card">
                <div class="card-image Camera">
                    <video class="FWidth Video" autoplay></video>
                    <canvas class="FWidth Imagem"></canvas>
                </div>
                <div class="card-content">
                    <%= form_for(resource, as: resource_name, url: session_path(resource_name), class: "Form") do |f| %>
                        <%= devise_error_messages! %>

                        <div class="Padrao">
                            <div class="field">
                                <%= f.label :email %><br />
                                <%= f.email_field :email, autofocus: true %>
                            </div>

                            <div class="field">
                                <%= f.label :password %><br />
                                <%= f.password_field :password, autocomplete: "off" %>
                            </div>
                        </div>

                      <!--TODO Implementar checkbox com Rails-->
                        <div class="field">
                            <input name="urlFace" id="urlFace" type="hidden" value="">
                            <input type="checkbox" value="1" name="useFace" id="useFace" checked>
                            <label for="useFace">Entrar com a face</label>
                        </div>

                        <% if devise_mapping.rememberable? -%>
                            <div class="field">
                                <%= f.check_box :remember_me %>
                                <%= f.label :remember_me %>
                            </div>
                        <% end -%>

                        <div class="actions">
                            <%= f.button "Entrar", type: "button", class: "btn waves-effect waves-light Entrar" %>
                        </div>
                    <% end %>

                    <%= render "users/shared/links" %>
                </div>
            </div>
        </div>
    </div>
</div>



<%
   # TODO encontrar uma forma onde este trcho fique no controller
   @mensagens = JsonPath.on(@relatorio.to_json, "$..mensagem") # TODO array?
   @mensagens << flash[:alert] unless flash[:alert].blank?
%>
<% if @mensagens %>
    <div class="hide">
    <% @mensagens.each do |mensagem| %>
        <div class="toast"><%= mensagem %></div>
    <% end %>
    </div>
<% end %>

<!--Resultados: <%= params.to_json.html_safe %><br><br>-->
SignIn: <%= @signIn.to_json.html_safe %><br><br>
Mensagens: <%= @mensagens.to_json.html_safe %><br><br>
Alert: <%= flash[:alert].to_json.html_safe %><br><br>
Response: <%= @response.to_json.html_safe %><br><br>
Relatorio: <%=@relatorio.to_json.html_safe %>

<% flash.each do |name, msg| %>
    <%= content_tag :div, "Nome: #{name} | Conteudo:#{msg}", :id => "flash_#{name}" if msg.is_a?(String) %> <br><br>
<% end %>

<script src="//code.jquery.com/jquery-1.11.0.min.js"></script>
<div>
    <script>
        // Inicia os toasts encontrados
        $( ".toast" ).each(function(i) {
            var text = $( this ).text();
            setTimeout( function(){
                Materialize.toast(text, 6000, "blue darken-1");
            }, 500 + ( i * 500 ));
        });
        // Grab elements, create settings, etc.
        var
            imagem    = $(".Camera .Imagem"),
            canvas    = imagem.get(0),
            context   = canvas.getContext("2d"),
            video     = $(".Camera .Video").get(0),
            videoObj  = { "video": true },
            errBack   = function(error) {
                console.log("Video capture error: ", error.code);
            };
        function camera(){

            // Put video listeners into place
            if(navigator.getUserMedia) { // Standard
                navigator.getUserMedia(videoObj, function(stream) {
                    video.src = stream;
                    video.play();
                }, errBack);
            } else if(navigator.webkitGetUserMedia) { // WebKit-prefixed
                navigator.webkitGetUserMedia(videoObj, function(stream){
                    video.src = window.URL.createObjectURL(stream);
                    video.play();
                }, errBack);
            }
            else if(navigator.mozGetUserMedia) { // Firefox-prefixed
                navigator.mozGetUserMedia(videoObj, function(stream){
                    video.src = window.URL.createObjectURL(stream);
                    video.play();
                }, errBack);
            };

//             document.getElementById("save").addEventListener("click", function() {
//             $.post('fotossalvar.php', {imagem:canvas.toDataURL()}, function(data){
//             },'json');
//             });
        }
        camera();

        $(".Entrar").click(function() {
            //TODO Pegar a imagem inteira (problemas com "drawImage")
            context.drawImage(video, 0, 0, 200, 200 * video.clientHeight/ video.clientWidth);
//          context.drawImage(video, 0, 0, 300, 300 * video.offsetWidth/ video.offsetHeight);
//          context.drawImage(video, 0, 0, 300, 300 * video.videoWidth/ video.videoHeight);
//          imagem.height(video.offsetHeight);
//          context.drawImage(video, 0, 0);
            $("#urlFace").val(canvas.toDataURL());
            $(".new_user").submit();
        });

        $("#useFace").change(function(){
            $(".Camera .Video").slideToggle();
            $(".Padrao").slideToggle();
        });
    </script>
</div>
